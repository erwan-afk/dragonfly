#!/bin/bash

# Script helper pour le d√©veloppement Dragonfly

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

show_help() {
    echo -e "${BLUE}üõ†Ô∏è  Dragonfly Development Helper${NC}"
    echo ""
    echo "Usage: ./scripts/dev-helper.sh [command]"
    echo ""
    echo "Commands:"
    echo "  start-dev     - D√©marrer le serveur de d√©veloppement (port 3002)"
    echo "  start-prod    - D√©marrer/red√©marrer la production (PM2)"
    echo "  stop-prod     - Arr√™ter la production"
    echo "  status        - Afficher le statut des serveurs"
    echo "  urls          - Afficher les URLs d'acc√®s"
    echo "  logs-dev      - Afficher les logs du dev server"
    echo "  logs-prod     - Afficher les logs de production"
    echo "  help          - Afficher cette aide"
    echo ""
}

check_port() {
    local port=$1
    if lsof -Pi :$port -sTCP:LISTEN -t >/dev/null ; then
        return 0  # Port occup√©
    else
        return 1  # Port libre
    fi
}

start_dev() {
    echo -e "${BLUE}üöÄ D√©marrage du serveur de d√©veloppement...${NC}"
    
    if check_port 3002; then
        echo -e "${YELLOW}‚ö†Ô∏è  Le port 3002 est d√©j√† utilis√©.${NC}"
        echo "Voulez-vous tuer le processus existant ? (y/N)"
        read -r response
        if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
            pkill -f "next dev.*3002" || true
            sleep 2
        else
            echo -e "${RED}‚ùå D√©marrage annul√©.${NC}"
            return 1
        fi
    fi
    
    echo -e "${GREEN}‚úÖ D√©marrage sur le port 3002...${NC}"
    npm run dev &
    DEV_PID=$!
    
    sleep 3
    if kill -0 $DEV_PID 2>/dev/null; then
        echo -e "${GREEN}‚úÖ Serveur de d√©veloppement d√©marr√© avec succ√®s!${NC}"
        echo ""
        show_urls
    else
        echo -e "${RED}‚ùå √âchec du d√©marrage du serveur de d√©veloppement.${NC}"
    fi
}

start_prod() {
    echo -e "${BLUE}üöÄ D√©marrage/red√©marrage de la production...${NC}"
    npm run deploy
}

stop_prod() {
    echo -e "${YELLOW}‚èπÔ∏è  Arr√™t de la production...${NC}"
    pm2 stop dragonfly-app
}

show_status() {
    echo -e "${BLUE}üìä Statut des serveurs:${NC}"
    echo ""
    
    echo -e "${YELLOW}Production (PM2):${NC}"
    pm2 show dragonfly-app 2>/dev/null || echo "‚ùå Production non d√©marr√©e"
    
    echo ""
    echo -e "${YELLOW}D√©veloppement (Port 3002):${NC}"
    if check_port 3002; then
        echo -e "${GREEN}‚úÖ Serveur de d√©veloppement actif${NC}"
    else
        echo -e "${RED}‚ùå Serveur de d√©veloppement arr√™t√©${NC}"
    fi
    
    echo ""
    echo -e "${YELLOW}Nginx (Port 80):${NC}"
    if check_port 80; then
        echo -e "${GREEN}‚úÖ Nginx actif${NC}"
    else
        echo -e "${RED}‚ùå Nginx arr√™t√©${NC}"
    fi
}

show_urls() {
    echo -e "${BLUE}üåê URLs d'acc√®s:${NC}"
    echo ""
    echo -e "${GREEN}Production:${NC}"
    echo "  http://217.65.144.71"
    echo ""
    echo -e "${YELLOW}D√©veloppement:${NC}"
    echo "  http://217.65.144.71:3002  (acc√®s direct)"
    echo "  http://217.65.144.71/dev/  (via nginx si configur√©)"
    echo ""
    echo -e "${BLUE}üí° Astuce:${NC} Utilisez l'acc√®s direct :3002 pour √©viter le cache nginx"
}

logs_dev() {
    echo -e "${BLUE}üìú Logs du serveur de d√©veloppement:${NC}"
    echo "Utilisez Ctrl+C pour quitter"
    sleep 1
    # Chercher le processus Next.js dev
    DEV_PID=$(pgrep -f "next-server.*dev.*3002" || pgrep -f "next dev.*3002")
    if [ ! -z "$DEV_PID" ]; then
        tail -f /proc/$DEV_PID/fd/1 2>/dev/null || echo "‚ùå Impossible d'acc√©der aux logs"
    else
        echo "‚ùå Serveur de d√©veloppement non trouv√©"
    fi
}

logs_prod() {
    echo -e "${BLUE}üìú Logs de production:${NC}"
    pm2 logs dragonfly-app
}

# Traitement des arguments
case "${1:-help}" in
    "start-dev")
        start_dev
        ;;
    "start-prod")
        start_prod
        ;;
    "stop-prod")
        stop_prod
        ;;
    "status")
        show_status
        ;;
    "urls")
        show_urls
        ;;
    "logs-dev")
        logs_dev
        ;;
    "logs-prod")
        logs_prod
        ;;
    "help"|*)
        show_help
        ;;
esac 